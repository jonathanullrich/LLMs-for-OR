{"system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.", "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?", "examples": null, "output": " Sure! We'll first create a linear programming model to maximize the profit while satisfying the constraints on frame parts and electrical components. We can define the decision variables as follows:\n\nx: number of units of product 1\ny: number of units of product 2 (up to 60 units)\n\nOur objective function (maximizing profit) can be expressed as:\n\nmaximize: 1*x + 2*y\n\nSubject to the following constraints:\n\n1. Frame parts constraint: 1*x + 3*y <= 200\n2. Electrical components constraint: 2*x + 2*y <= 300\n3. Non-negativity constraint: x >= 0, y >= 0\n\nNow, we can write a Python code using the PuLP library to solve this linear programming problem.\n\nFirst, let's install PuLP:\n```bash\npip install pulp\n```\nHere's the Python code:\n\n```python\nimport pulp\n\n# Define the problem\nproblem_name = \"LightFixtureProduction\"\nprob = pulp.LpProblem(problem_name, pulp.LpMaximize)\n\n# Define the decision variables\nvar_x = pulp.LpVariable(\"Product_1_units\", 0, None, cat=pulp.LpContinuous)\nvar_y = pulp.LpVariable(\"Product_2_units\", 0, 60, cat=pulp.LpContinuous)\n\n# Objective function\nprob += 1 * var_x + 2 * var_y\n\n# Constraints\nprob += var_x + 3 * var_y <= 200\nprob += 2 * var_x + 2 * var_y <= 300\n\n# Solve the problem\nprob.solve()\n\n# Get the solution\nsolution = pulp.value(prob.objective)\n```\n\nNow, the final output has been assigned to the 'solution' variable. The optimal production plan and the corresponding maximum profit will be obtained when running this code, and the value of the 'solution' variable will represent the total profit.", "code": "import pulp\n\n# Define the problem\nproblem_name = \"LightFixtureProduction\"\nprob = pulp.LpProblem(problem_name, pulp.LpMaximize)\n\n# Define the decision variables\nvar_x = pulp.LpVariable(\"Product_1_units\", 0, None, cat=pulp.LpContinuous)\nvar_y = pulp.LpVariable(\"Product_2_units\", 0, 60, cat=pulp.LpContinuous)\n\n# Objective function\nprob += 1 * var_x + 2 * var_y\n\n# Constraints\nprob += var_x + 3 * var_y <= 200\nprob += 2 * var_x + 2 * var_y <= 300\n\n# Solve the problem\nprob.solve()\n\n# Get the solution\nsolution = pulp.value(prob.objective)", "solution": 175.0}