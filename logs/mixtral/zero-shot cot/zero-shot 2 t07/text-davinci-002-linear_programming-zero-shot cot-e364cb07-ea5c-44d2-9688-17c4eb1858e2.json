{"system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.", "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?", "examples": null, "output": " Sure! Here's the step-by-step approach to solve the problem:\n\n1. Define the decision variables: Let x be the number of units of product 1, and y be the number of units of product 2.\n2. Define the constraints: The constraints come from the available resources of frame parts and electrical components. The constraint for frame parts can be written as 1x + 3y \u2264 200, and the constraint for electrical components can be written as 2x + 2y \u2264 300.\n3. Determine the objective function: The objective function is to maximize the profit, which can be written as P(x, y) = x + 2y (as each unit of product 1 gives a profit of $1, and each unit of product 2 gives a profit of $2 up to 60 units).\n4. Solve the linear programming problem: We need to find the values of x and y that maximize the objective function subject to the constraints.\n\nNow, let's write the Python code to solve the problem:\n\n```python\nimport pulp\n\n# Define the decision variables\nx = pulp.LpVariable('x', lowBound=0, cat='Integer')\ny = pulp.LpVariable('y', lowBound=0, upBound=60, cat='Integer')\n\n# Define the constraints\nprob = pulp.LpProblem('WorldLightCompany', pulp.LpMaximize)\nprob += 1*x + 2*y\nprob += 1*x + 3*y <= 200\nprob += 2*x + 2*y <= 300\n\n# Solve the linear programming problem\nprob.solve()\n\n# Assign the final output to a variable 'solution'\nsolution = pulp.value(prob.objective)\n```\n\nThe 'solution' variable contains the maximum profit that the WorldLight Company can achieve.", "code": "import pulp\n\n# Define the decision variables\nx = pulp.LpVariable('x', lowBound=0, cat='Integer')\ny = pulp.LpVariable('y', lowBound=0, upBound=60, cat='Integer')\n\n# Define the constraints\nprob = pulp.LpProblem('WorldLightCompany', pulp.LpMaximize)\nprob += 1*x + 2*y\nprob += 1*x + 3*y <= 200\nprob += 2*x + 2*y <= 300\n\n# Solve the linear programming problem\nprob.solve()\n\n# Assign the final output to a variable 'solution'\nsolution = pulp.value(prob.objective)", "solution": 175.0}