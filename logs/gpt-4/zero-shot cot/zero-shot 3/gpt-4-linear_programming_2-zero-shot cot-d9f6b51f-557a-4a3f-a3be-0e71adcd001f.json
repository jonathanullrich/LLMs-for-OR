{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: This is your lucky day. You have just won a $20,000 prize. You are setting aside $8,000 for taxes and partying expenses, but you have decided to invest the other $12,000. Upon hearing this news, two different friends have offered you an opportunity to become a partner in two different entrepreneurial ventures, one planned by each friend. In both cases, this investment would involve expending some of your time next summer as well as putting up cash. Becoming a full partner in the first friend\u2019s venture would require an investment of $10,000 and 400 hours, and your estimated profit (ignoring the value of your time) would be $9,000. The corresponding figures for the second friend\u2019s venture are $8,000 and 500 hours, with an estimated profit to you of $9,000. However, both friends are flexible and would allow you to come in at any fraction of a full partnership you would like. If you choose a fraction of a full partnership, all the above figures given for a full partnership (money investment, time investment, and your profit) would be multiplied by this same fraction. Because you were looking for an interesting summer job anyway (maximum of 600 hours), you have decided to participate in one or both friends\u2019 ventures in whichever combination would maximize your total estimated profit. You now need to solve the problem of finding the best combination.",
    "examples": null,
    "output": "Firstly, we need to define our decision variables. We can let x be the proportion of the partnership you take in the first friend's venture and y be the proportion of the partnership you take in the second friend's venture. The problem states that you have a maximum of $12,000 to invest and a maximum of 600 hours of time, so these will be our constraints.\n\nSecondly, we need to define our objective function. We want to maximize our total profit, which is $9,000x + $9,000y (as the profit scales linearly with the proportion of the partnership).\n\nSo we have:\n\nMaximize $9,000x + $9,000y\n\nSubject to:\n\n$10,000x + $8,000y \u2264 $12,000 (Money constraint)\n\n400x + 500y \u2264 600 (Time constraint)\n\nx \u2265 0, y \u2265 0 (Non-negativity constraints)\n\nWe can solve this linear programming problem using scipy's linprog function. Here is the Python code: \n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients of objective function\nc = [-9000, -9000] \n\n# Coefficients of inequality constraints\nA = [[10000, 8000], [400, 500]] \n\n# RHS values of inequality constraints\nb = [12000, 600] \n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=(0, None))\n\nsolution = res.fun\n```\nIn this code, the objective function is minimized, so we take the negative of the profit function to convert maximization into minimization. The solution will be the maximum profit you can make.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients of objective function\nc = [-9000, -9000] \n\n# Coefficients of inequality constraints\nA = [[10000, 8000], [400, 500]] \n\n# RHS values of inequality constraints\nb = [12000, 600] \n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=(0, None))\n\nsolution = res.fun",
    "solution": -12000.0
}