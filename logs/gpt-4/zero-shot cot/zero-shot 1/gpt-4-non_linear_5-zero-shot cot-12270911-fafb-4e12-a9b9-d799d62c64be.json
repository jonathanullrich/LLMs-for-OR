{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The MFG Corporation is planning to produce and market three different products. Let x1, x2, and x3 denote the number of units of the three respective products to be produced. The preliminary estimates of their potential profitability are as follows. For the first 15 units produced of Product 1, the unit profit would be approximately $360. The unit profit would be only $30 for any additional units of Product 1. For the first 20 units produced of Product 2, the unit profit is estimated at $240. The unit profit would be $120 for each of the next 20 units and $90 for any additional units. For the first 20 units of Product 3, the unit profit would be $450. The unit profit would be $300 for each of the next 10 units and $180 for any additional units. Certain limitations on the use of needed resources impose the following constraints on the production of the three products: x1 + x2 + x3 <= 60, 3*x1 + 2*x2 <= 200, x1 + 2*x3 <= 70. Management wants to know what values of x1, x2 and x3 should be chosen to maximize the total profit.",
    "examples": null,
    "output": "First, we need to import the required libraries. We will use the scipy library which provides functions to minimize (or maximize) objective functions, possibly subject to constraints.\n\nNext, we define the objective function, which is the total profit we want to maximize. According to the problem, the profit function is a piecewise function where the profit per unit changes after a certain number of units are produced. We need to consider these changes in our function.\n\nThen, we define the constraints. In this case, we have three constraints given in the problem. We define these constraints as inequality constraints.\n\nFinally, we use the linprog function from scipy.optimize to find the values of x1, x2, and x3 that maximize our objective function subject to the constraints. The linprog function minimizes the objective function, so to maximize our profit, we multiply the objective function by -1 and then multiply the result by -1 again to get the maximum profit.\n\nHere is the python code:\n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients of objective function\nc = [-1*(360*15 + 30*(60-15)), -1*(240*20 + 120*20 + 90*(60-40)), -1*(450*20 + 300*10 + 180*(60-30))]\n\n# Coefficients of inequality constraints\nA = [[1, 1, 1], [3, 2, 0], [1, 0, 2]]\nb = [60, 200, 70]\n\n# Bounds for variables\nx0_bounds = (0, None)\nx1_bounds = (0, None)\nx2_bounds = (0, None)\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds], method='highs')\n\n# The optimal solution\nsolution = -1 * res.fun\n```\nNote: The output of the code is a number, which is the maximum total profit that can be achieved. The values of x1, x2, and x3 that achieve this maximum profit can be obtained from res.x.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients of objective function\nc = [-1*(360*15 + 30*(60-15)), -1*(240*20 + 120*20 + 90*(60-40)), -1*(450*20 + 300*10 + 180*(60-30))]\n\n# Coefficients of inequality constraints\nA = [[1, 1, 1], [3, 2, 0], [1, 0, 2]]\nb = [60, 200, 70]\n\n# Bounds for variables\nx0_bounds = (0, None)\nx1_bounds = (0, None)\nx2_bounds = (0, None)\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds], method='highs')\n\n# The optimal solution\nsolution = -1 * res.fun",
    "solution": 834000.0
}