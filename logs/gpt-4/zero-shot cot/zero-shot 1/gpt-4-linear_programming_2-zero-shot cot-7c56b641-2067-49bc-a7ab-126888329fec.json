{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: This is your lucky day. You have just won a $20,000 prize. You are setting aside $8,000 for taxes and partying expenses, but you have decided to invest the other $12,000. Upon hearing this news, two different friends have offered you an opportunity to become a partner in two different entrepreneurial ventures, one planned by each friend. In both cases, this investment would involve expending some of your time next summer as well as putting up cash. Becoming a full partner in the first friend\u2019s venture would require an investment of $10,000 and 400 hours, and your estimated profit (ignoring the value of your time) would be $9,000. The corresponding figures for the second friend\u2019s venture are $8,000 and 500 hours, with an estimated profit to you of $9,000. However, both friends are flexible and would allow you to come in at any fraction of a full partnership you would like. If you choose a fraction of a full partnership, all the above figures given for a full partnership (money investment, time investment, and your profit) would be multiplied by this same fraction. Because you were looking for an interesting summer job anyway (maximum of 600 hours), you have decided to participate in one or both friends\u2019 ventures in whichever combination would maximize your total estimated profit. You now need to solve the problem of finding the best combination.",
    "examples": null,
    "output": "Sure, let's break down the problem:\n\n1. We have two possible investments: Venture 1 and Venture 2.\n2. Each investment has three variables: cash investment, time investment, and profit.\n3. We can invest in any fraction of each venture, meaning we can multiply all numbers by the same fraction.\n4. We're aiming to maximize our total estimated profit.\n\nSo, we're dealing with a linear programming problem here. We can use the PuLP library in Python to solve this problem. First, we can define the problem and the variables for the fractions of investment in each venture. Then, we can add the constraints and the objective function. Finally, we can solve the problem and print the optimal solution. \n\nHere's the Python code to solve this problem:\n\n```python\nfrom pulp import *\n\n# Define the problem\nprob = LpProblem(\"Maximize Profit\", LpMaximize)\n\n# Variables\nx1 = LpVariable(\"Venture 1 Fraction\", 0, 1)\nx2 = LpVariable(\"Venture 2 Fraction\", 0, 1)\n\n# Objective function\nprob += 9000 * x1 + 9000 * x2, \"Total Profit\"\n\n# Constraints\nprob += 10000 * x1 + 8000 * x2 <= 12000, \"Total Cash\"\nprob += 400 * x1 + 500 * x2 <= 600, \"Total Time\"\n\n# Solve the problem\nprob.solve()\n\n# Print the optimal solution\nprint(\"Venture 1 Fraction:\", value(x1))\nprint(\"Venture 2 Fraction:\", value(x2))\nprint(\"Total Profit:\", value(prob.objective))\n\nsolution = value(prob.objective)\n```\n\nThis code will give you the fractions of investment in each venture that will maximize the total profit, given the constraints on cash and time.",
    "code": "from pulp import *\n\n# Define the problem\nprob = LpProblem(\"Maximize Profit\", LpMaximize)\n\n# Variables\nx1 = LpVariable(\"Venture 1 Fraction\", 0, 1)\nx2 = LpVariable(\"Venture 2 Fraction\", 0, 1)\n\n# Objective function\nprob += 9000 * x1 + 9000 * x2, \"Total Profit\"\n\n# Constraints\nprob += 10000 * x1 + 8000 * x2 <= 12000, \"Total Cash\"\nprob += 400 * x1 + 500 * x2 <= 600, \"Total Time\"\n\n# Solve the problem\nprob.solve()\n\n# Print the optimal solution\nprint(\"Venture 1 Fraction:\", value(x1))\nprint(\"Venture 2 Fraction:\", value(x2))\nprint(\"Total Profit:\", value(prob.objective))\n\nsolution = value(prob.objective)",
    "solution": 12000.00006
}