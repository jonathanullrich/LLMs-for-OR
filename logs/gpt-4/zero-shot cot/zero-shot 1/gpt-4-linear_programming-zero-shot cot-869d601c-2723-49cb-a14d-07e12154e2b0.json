{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?",
    "examples": null,
    "output": "Sure,\n\nStep 1: Define the decision variables.\nLet's say, x1 is the units of product 1 and x2 is the units of product 2.\n\nStep 2: Define the objective function.\nThe objective is to maximize the profit, which is the sum of profit from product 1 and product 2, so the objective function will be: max(z) = 1*x1 + 2*x2.\n\nStep 3: Define the constraints.\nThe constraints are the availability of frame parts and electrical components which is 200 units and 300 units respectively. So, the constraints will be:\n- Frame parts: x1 + 3*x2 <= 200\n- Electrical components: 2*x1 + 2*x2 <= 300\n- Additionally, the production of product 2 is limited to 60 units: x2 <= 60\n- And, the units produced cannot be negative: x1, x2 >= 0\n\nLet's use the Linear Programming (LP) problem solving approach to find out the values of x1 and x2 which will maximize the profit. Python's scipy library provides a function called linprog() to solve LP problems.\n\nHere is the python code to solve the problem:\n\n```python\nfrom scipy.optimize import linprog\n\nc = [-1, -2]  # coefficients of the objective function\nA = [[1, 3], [2, 2]]  # coefficients for the inequality constraints\nb = [200, 300]  # RHS values for the inequality constraints\nx0_bounds = (0, None)  # bounds of x1\nx1_bounds = (0, 60)  # bounds of x2\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\nsolution = round(-res.fun)\n```\n\nThe solution will contain the maximum profit that can be achieved.\n\nPlease note that in linprog function, we need to convert the maximization problem to a minimization problem by taking the negative of the objective function, which is why we use -1 and -2 instead of 1 and 2 in the objective function. The solution will also be negative, so we need to change the sign of the solution to get the correct answer.",
    "code": "from scipy.optimize import linprog\n\nc = [-1, -2]  # coefficients of the objective function\nA = [[1, 3], [2, 2]]  # coefficients for the inequality constraints\nb = [200, 300]  # RHS values for the inequality constraints\nx0_bounds = (0, None)  # bounds of x1\nx1_bounds = (0, 60)  # bounds of x2\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\nsolution = round(-res.fun)",
    "solution": 175
}