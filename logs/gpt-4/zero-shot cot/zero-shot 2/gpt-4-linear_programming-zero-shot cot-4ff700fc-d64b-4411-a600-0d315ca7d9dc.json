{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?",
    "examples": null,
    "output": "The problem can be modeled as a linear programming problem. \n\nLet's denote the quantity of product 1 to be produced as x and the quantity of product 2 to be produced as y.\n\nWe have the following conditions:\n\nFor the metal frame parts:\n1x + 3y \u2264 200 (1)\n\nFor the electrical components:\n2x + 2y \u2264 300 (2)\n\nFor the profit of product 2:\ny \u2264 60 (3)\n\nOur goal is to maximize the profit P:\nP = x + 2y\n\nTo solve this problem, we can use the scipy library in python, which provides a function called linprog for solving linear programming problems. The linprog function minimizes the objective function, so to maximize our profit, we need to multiply the profit by -1 and then multiply the solution by -1.\n\nHere is the python code to solve this problem:\n\n```python\nfrom scipy.optimize import linprog\n\nc = [-1, -2]  # Coefficients for the objective function\nA = [[1, 3], [2, 2]]  # Coefficients for the inequalities\nb = [200, 300]  # Right-hand side of the inequalities\n\nx0_bounds = (0, None)  # Bounds for x\nx1_bounds = (0, 60)  # Bounds for y\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds])\n\nsolution = res.fun * -1  # Multiply by -1 to get the maximum profit\n```\n\nIn this code, the linprog function is used to solve the linear programming problem. The result of the linprog function is an object that contains information about the solution. The fun attribute of the result object contains the value of the objective function at the solution. We multiply this value by -1 to get the maximum profit.",
    "code": "from scipy.optimize import linprog\n\nc = [-1, -2]  # Coefficients for the objective function\nA = [[1, 3], [2, 2]]  # Coefficients for the inequalities\nb = [200, 300]  # Right-hand side of the inequalities\n\nx0_bounds = (0, None)  # Bounds for x\nx1_bounds = (0, 60)  # Bounds for y\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds])\n\nsolution = res.fun * -1  # Multiply by -1 to get the maximum profit",
    "solution": 175.0
}