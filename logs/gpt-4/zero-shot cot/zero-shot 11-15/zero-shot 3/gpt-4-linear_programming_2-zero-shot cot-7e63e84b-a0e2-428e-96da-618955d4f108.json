{"system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.", "problem_description": "Consider the following problem: This is your lucky day. You have just won a $20,000 prize. You are setting aside $8,000 for taxes and partying expenses, but you have decided to invest the other $12,000. Upon hearing this news, two different friends have offered you an opportunity to become a partner in two different entrepreneurial ventures, one planned by each friend. In both cases, this investment would involve expending some of your time next summer as well as putting up cash. Becoming a full partner in the first friend\u2019s venture would require an investment of $10,000 and 400 hours, and your estimated profit (ignoring the value of your time) would be $9,000. The corresponding figures for the second friend\u2019s venture are $8,000 and 500 hours, with an estimated profit to you of $9,000. However, both friends are flexible and would allow you to come in at any fraction of a full partnership you would like. If you choose a fraction of a full partnership, all the above figures given for a full partnership (money investment, time investment, and your profit) would be multiplied by this same fraction. Because you were looking for an interesting summer job anyway (maximum of 600 hours), you have decided to participate in one or both friends\u2019 ventures in whichever combination would maximize your total estimated profit. You now need to solve the problem of finding the best combination.", "examples": null, "output": "Sure, let's break it down.\n\nFirst, let's create variables for the amount of money and time required for a full partnership in both ventures. \n\nThen, we can create a function that calculates the profit for a given fraction of partnership in either venture, taking into account the money and time constraints.\n\nNext, we can use a linear programming solver to find the fraction of partnership that maximizes the profit.\n\nFinally, we can calculate the maximum profit using the optimal fraction of partnership.\n\nLet's start coding. \n\n```python\n# Required Libraries\nfrom scipy.optimize import linprog\n\n# Variables\ninvestment_1 = 10000\nhours_1 = 400\nprofit_1 = 9000\n\ninvestment_2 = 8000\nhours_2 = 500\nprofit_2 = 9000\n\ntotal_investment = 12000\ntotal_hours = 600\n\n# Defining the problem\nc = [-profit_1, -profit_2]  # Coefficients for the objective function\nA = [[investment_1, investment_2], [hours_1, hours_2]]  # Coefficients for the inequalities\nb = [total_investment, total_hours]  # RHS values for the inequalities\n\n# Solving the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=(0, None))\n\n# Calculating the maximum profit\nsolution = -res.fun\n```\n\nThe above code finds the fraction of partnership in each venture that maximizes the total profit while not exceeding the total investment or total hours. The result is stored in the 'solution' variable. \n\nThe linprog function minimizes the objective function by default, so we have to negate the coefficients of the objective function and the final result to get the maximum profit.", "code": "# Required Libraries\nfrom scipy.optimize import linprog\n\n# Variables\ninvestment_1 = 10000\nhours_1 = 400\nprofit_1 = 9000\n\ninvestment_2 = 8000\nhours_2 = 500\nprofit_2 = 9000\n\ntotal_investment = 12000\ntotal_hours = 600\n\n# Defining the problem\nc = [-profit_1, -profit_2]  # Coefficients for the objective function\nA = [[investment_1, investment_2], [hours_1, hours_2]]  # Coefficients for the inequalities\nb = [total_investment, total_hours]  # RHS values for the inequalities\n\n# Solving the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=(0, None))\n\n# Calculating the maximum profit\nsolution = -res.fun", "solution": 12000.0}