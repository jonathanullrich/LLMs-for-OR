{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The MFG Corporation is planning to produce and market three different products. Let x1, x2, and x3 denote the number of units of the three respective products to be produced. The preliminary estimates of their potential profitability are as follows. For the first 15 units produced of Product 1, the unit profit would be approximately $360. The unit profit would be only $30 for any additional units of Product 1. For the first 20 units produced of Product 2, the unit profit is estimated at $240. The unit profit would be $120 for each of the next 20 units and $90 for any additional units. For the first 20 units of Product 3, the unit profit would be $450. The unit profit would be $300 for each of the next 10 units and $180 for any additional units. Certain limitations on the use of needed resources impose the following constraints on the production of the three products: x1 + x2 + x3 <= 60, 3*x1 + 2*x2 <= 200, x1 + 2*x3 <= 70. Management wants to know what values of x1, x2 and x3 should be chosen to maximize the total profit.",
    "output": "This is an optimization problem which can be solved using Linear Programming (LP). Python's PuLP library is a powerful tool to solve LP problems. Here is the Python code to solve the problem:\n\n```python\nfrom pulp import *\n\n# Create the 'prob' variable to contain the problem data\nprob = LpProblem(\"Maximize MFG Corporation Profit\", LpMaximize)\n\n# Variables\nx1 = LpVariable(\"Product 1 units\", 0, None, LpInteger)\nx2 = LpVariable(\"Product 2 units\", 0, None, LpInteger)\nx3 = LpVariable(\"Product 3 units\", 0, None, LpInteger)\n\n# Objective Function\nprofit = [360*min(x1, 15) + 30*max(x1-15, 0), \n          240*min(x2, 20) + 120*max(min(x2-20, 20), 0) + 90*max(x2-40, 0),\n          450*min(x3, 20) + 300*max(min(x3-20, 10), 0) + 180*max(x3-30, 0)]\nprob += lpSum(profit)\n\n# Constraints\nprob += x1 + x2 + x3 <= 60\nprob += 3*x1 + 2*x2 <= 200\nprob += x1 + 2*x3 <= 70\n\n# Solve the problem\nprob.solve()\n\n# Print the results\nsolution = {\n    \"Product 1 units\": x1.varValue,\n    \"Product 2 units\": x2.varValue,\n    \"Product 3 units\": x3.varValue,\n    \"Total Profit\": value(prob.objective)\n}\n```\n\nPlease note that the PuLP solver may require additional software to be installed on your system, and the actual solution might differ depending on the solver used.",
    "code": "from pulp import *\n\n# Create the 'prob' variable to contain the problem data\nprob = LpProblem(\"Maximize MFG Corporation Profit\", LpMaximize)\n\n# Variables\nx1 = LpVariable(\"Product 1 units\", 0, None, LpInteger)\nx2 = LpVariable(\"Product 2 units\", 0, None, LpInteger)\nx3 = LpVariable(\"Product 3 units\", 0, None, LpInteger)\n\n# Objective Function\nprofit = [360*min(x1, 15) + 30*max(x1-15, 0), \n          240*min(x2, 20) + 120*max(min(x2-20, 20), 0) + 90*max(x2-40, 0),\n          450*min(x3, 20) + 300*max(min(x3-20, 10), 0) + 180*max(x3-30, 0)]\nprob += lpSum(profit)\n\n# Constraints\nprob += x1 + x2 + x3 <= 60\nprob += 3*x1 + 2*x2 <= 200\nprob += x1 + 2*x3 <= 70\n\n# Solve the problem\nprob.solve()\n\n# Print the results\nsolution = {\n    \"Product 1 units\": x1.varValue,\n    \"Product 2 units\": x2.varValue,\n    \"Product 3 units\": x3.varValue,\n    \"Total Profit\": value(prob.objective)\n}",
    "solution": "COMPILE_ERROR"
}