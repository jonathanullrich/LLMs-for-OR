{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: This is your lucky day. You have just won a $20,000 prize. You are setting aside $8,000 for taxes and partying expenses, but you have decided to invest the other $12,000. Upon hearing this news, two different friends have offered you an opportunity to become a partner in two different entrepreneurial ventures, one planned by each friend. In both cases, this investment would involve expending some of your time next summer as well as putting up cash. Becoming a full partner in the first friend\u2019s venture would require an investment of $10,000 and 400 hours, and your estimated profit (ignoring the value of your time) would be $9,000. The corresponding figures for the second friend\u2019s venture are $8,000 and 500 hours, with an estimated profit to you of $9,000. However, both friends are flexible and would allow you to come in at any fraction of a full partnership you would like. If you choose a fraction of a full partnership, all the above figures given for a full partnership (money investment, time investment, and your profit) would be multiplied by this same fraction. Because you were looking for an interesting summer job anyway (maximum of 600 hours), you have decided to participate in one or both friends\u2019 ventures in whichever combination would maximize your total estimated profit. You now need to solve the problem of finding the best combination.",
    "output": "In this problem, the goal is to maximize profits given the constraints of available money and time. This is a classic linear programming problem which can be solved using Python's scipy.optimize library.\n\nThe variables in this problem are the portions of partnership in friend 1's venture (x1) and friend 2's venture (x2). The constraints are the available cash ($12,000) and available time (600 hours). The objective function to be maximized is the total profit which is the sum of profits from both ventures.\n\nHere is the Python code to solve this problem using the linprog function from scipy.optimize library:\n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-9000, -9000] # Coefficients are negative because linprog solves minimization problems\n\n# Inequality constraints matrix\nA = [[10000, 8000], [400, 500]]\n\n# Inequality constraints vector\nb = [12000, 600]\n\n# Bounds for each variable\nx0_bounds = (0, None) \nx1_bounds = (0, None)\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\n# The optimal solution\nsolution = res.fun * -1 # Multiply by -1 because linprog solves minimization problems\n```\n\nThis code will find the optimal portions of partnership in each venture that maximize the total profit while respecting the cash and time constraints.\n\nThe final output 'solution' is the maximum total profit achievable.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-9000, -9000] # Coefficients are negative because linprog solves minimization problems\n\n# Inequality constraints matrix\nA = [[10000, 8000], [400, 500]]\n\n# Inequality constraints vector\nb = [12000, 600]\n\n# Bounds for each variable\nx0_bounds = (0, None) \nx1_bounds = (0, None)\n\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\n# The optimal solution\nsolution = res.fun * -1 # Multiply by -1 because linprog solves minimization problems",
    "solution": 12000.0
}