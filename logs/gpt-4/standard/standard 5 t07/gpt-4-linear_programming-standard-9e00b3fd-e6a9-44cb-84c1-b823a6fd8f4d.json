{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?",
    "output": "The problem is a linear programming problem. We can solve it using the `scipy.optimize.linprog` function.\n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients in the objective function (profit per unit of each product)\nc = [-1, -2]  # the negative sign because linprog minimizes the objective function\n\n# Inequality constraints matrix\nA = [[1, 3],  # frame parts\n     [2, 2]]  # electrical components\n\n# Inequality constraints vector\nb = [200, 300]\n\n# Bounds for each variable\nx0_bounds = (0, None)  # product 1 can be 0 or any positive number\nx1_bounds = (0, 60)  # product 2 can be 0 or any positive number up to 60\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\n# The maximum profit is the negative of the optimum value of the objective function\nsolution = -res.fun\n```\n\nThis will give the maximum profit that the company can achieve by producing the optimal number of units of each product.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients in the objective function (profit per unit of each product)\nc = [-1, -2]  # the negative sign because linprog minimizes the objective function\n\n# Inequality constraints matrix\nA = [[1, 3],  # frame parts\n     [2, 2]]  # electrical components\n\n# Inequality constraints vector\nb = [200, 300]\n\n# Bounds for each variable\nx0_bounds = (0, None)  # product 1 can be 0 or any positive number\nx1_bounds = (0, 60)  # product 2 can be 0 or any positive number up to 60\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds], method='highs')\n\n# The maximum profit is the negative of the optimum value of the objective function\nsolution = -res.fun",
    "solution": 175.0
}