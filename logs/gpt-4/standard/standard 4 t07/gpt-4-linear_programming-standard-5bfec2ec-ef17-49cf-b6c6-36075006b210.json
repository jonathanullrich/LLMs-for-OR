{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The WorldLight Company produces two light fixtures (products 1 and 2) that require both metal frame parts and electrical components. Management wants to determine how many units of each product to produce so as to maximize profit. For each unit of product 1, 1 unit of frame parts and 2 units of electrical components are required. For each unit of product 2, 3 units of frame parts and 2 units of electrical components are required. The company has 200 units of frame parts and 300 units of electrical components. Each unit of product 1 gives a profit of $1, and each unit of product 2, up to 60 units, gives a profit of $2. Any excess over 60 units of product 2 brings no profit, so such an excess has been ruled out. What is the resulting total profit?",
    "output": "The problem can be solved using linear programming. We will use the pulp package in python to model and solve the problem.\n\n```python\nfrom pulp import LpMaximize, LpProblem, LpStatus, lpSum, LpVariable\n\n# Define the model\nmodel = LpProblem(name=\"profit-maximizing-problem\", sense=LpMaximize)\n\n# Define the decision variables\nx = LpVariable(name=\"X\", lowBound=0)\ny = LpVariable(name=\"Y\", lowBound=0, upBound=60)\n\n# Add the constraints\nmodel += (x + 3 * y <= 200, \"frame_parts_constraint\")\nmodel += (2 * x + 2 * y <= 300, \"electrical_components_constraint\")\n\n# Set the objective\nmodel += x + 2 * y\n\n# Solve the problem\nmodel.solve()\n\nsolution = model.objective.value()\n```\n\nThis code will define the decision variables x and y for product 1 and product 2 respectively, set up the constraints based on the frame parts and electrical components available, and then define the objective function to be maximized (i.e., the total profit). It will then solve the problem and store the maximum possible profit in the variable 'solution'.",
    "code": "from pulp import LpMaximize, LpProblem, LpStatus, lpSum, LpVariable\n\n# Define the model\nmodel = LpProblem(name=\"profit-maximizing-problem\", sense=LpMaximize)\n\n# Define the decision variables\nx = LpVariable(name=\"X\", lowBound=0)\ny = LpVariable(name=\"Y\", lowBound=0, upBound=60)\n\n# Add the constraints\nmodel += (x + 3 * y <= 200, \"frame_parts_constraint\")\nmodel += (2 * x + 2 * y <= 300, \"electrical_components_constraint\")\n\n# Set the objective\nmodel += x + 2 * y\n\n# Solve the problem\nmodel.solve()\n\nsolution = model.objective.value()",
    "solution": 175.0
}