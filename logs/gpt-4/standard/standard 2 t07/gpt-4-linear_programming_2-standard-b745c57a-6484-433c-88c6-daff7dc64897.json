{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: This is your lucky day. You have just won a $20,000 prize. You are setting aside $8,000 for taxes and partying expenses, but you have decided to invest the other $12,000. Upon hearing this news, two different friends have offered you an opportunity to become a partner in two different entrepreneurial ventures, one planned by each friend. In both cases, this investment would involve expending some of your time next summer as well as putting up cash. Becoming a full partner in the first friend\u2019s venture would require an investment of $10,000 and 400 hours, and your estimated profit (ignoring the value of your time) would be $9,000. The corresponding figures for the second friend\u2019s venture are $8,000 and 500 hours, with an estimated profit to you of $9,000. However, both friends are flexible and would allow you to come in at any fraction of a full partnership you would like. If you choose a fraction of a full partnership, all the above figures given for a full partnership (money investment, time investment, and your profit) would be multiplied by this same fraction. Because you were looking for an interesting summer job anyway (maximum of 600 hours), you have decided to participate in one or both friends\u2019 ventures in whichever combination would maximize your total estimated profit. You now need to solve the problem of finding the best combination.",
    "output": "As this is a linear programming problem, we can use Python's scipy library to solve it. The problem can be seen as follows:\n\nLet x be the fraction of full partnership in the first friend's venture and y be the fraction of full partnership in the second friend's venture.\n\nWe want to maximize the total profit: 9000x + 9000y\n\nSubject to the following constraints:\n\nMoney investment: 10000x + 8000y <= 12000\nTime investment: 400x + 500y <= 600\n\nHere is the code:\n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-9000, -9000]\n\n# Inequality constraints matrix\nA = [[10000, 8000], [400, 500]]\n\n# Inequality constraints vector\nb = [12000, 600]\n\n# Bounds of the variables\nx_bounds = (0, None)\ny_bounds = (0, None)\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x_bounds, y_bounds])\n\n# Total profit\nsolution = -res.fun\n```\n\nThe total profit assigned to the variable 'solution' is the best profit that can be achieved according to the constraints. \n\nPlease note that we need to multiply the coefficients of the objective function by -1 as linprog minimizes the function by default. The negative of the maximum is the minimum, this is why we multiply by -1 and then take the negative of the result.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-9000, -9000]\n\n# Inequality constraints matrix\nA = [[10000, 8000], [400, 500]]\n\n# Inequality constraints vector\nb = [12000, 600]\n\n# Bounds of the variables\nx_bounds = (0, None)\ny_bounds = (0, None)\n\n# Solve the problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x_bounds, y_bounds])\n\n# Total profit\nsolution = -res.fun",
    "solution": 12000.0
}