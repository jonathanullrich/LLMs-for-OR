{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The MFG Corporation is planning to produce and market three different products. Let x1, x2, and x3 denote the number of units of the three respective products to be produced. The preliminary estimates of their potential profitability are as follows. For the first 15 units produced of Product 1, the unit profit would be approximately $360. The unit profit would be only $30 for any additional units of Product 1. For the first 20 units produced of Product 2, the unit profit is estimated at $240. The unit profit would be $120 for each of the next 20 units and $90 for any additional units. For the first 20 units of Product 3, the unit profit would be $450. The unit profit would be $300 for each of the next 10 units and $180 for any additional units. Certain limitations on the use of needed resources impose the following constraints on the production of the three products: x1 + x2 + x3 <= 60, 3*x1 + 2*x2 <= 200, x1 + 2*x3 <= 70. Management wants to know what values of x1, x2 and x3 should be chosen to maximize the total profit.",
    "output": "This problem is a type of linear programming problem, which can be solved using libraries such as `scipy`. However, it is complicated by the fact that the profit of each product changes depending on the quantity produced. This discontinuity requires that we break down the problem into several simpler linear programming problems.\n\n```python\nfrom scipy.optimize import linprog\n\n# Constraints\nA = [[1, 1, 1], [3, 2, 0], [1, 0, 2]]\nb = [60, 200, 70]\n\n# Bounds for variables\nx0_bounds = (0, None)\nx1_bounds = (0, None)\nx2_bounds = (0, None)\n\n# Case 1: All products are produced in their most profitable quantities\nc = [-360, -240, -450]\nres1 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 2: Product 1 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-30, -240, -450]\nres2 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 3: Product 2 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-360, -120, -450]\nres3 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 4: Product 3 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-360, -240, -300]\nres4 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 5: All products are produced in their second most profitable quantities\nc = [-30, -120, -300]\nres5 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Find the maximum profit\nprofits = [-res1.fun, -res2.fun, -res3.fun, -res4.fun, -res5.fun]\nsolution = max(profits)\n```\n\nNote: The `linprog` function minimizes the objective function by default, so we pass the negative of the profit coefficients to the function and then negate the result to get the maximum profit.",
    "code": "from scipy.optimize import linprog\n\n# Constraints\nA = [[1, 1, 1], [3, 2, 0], [1, 0, 2]]\nb = [60, 200, 70]\n\n# Bounds for variables\nx0_bounds = (0, None)\nx1_bounds = (0, None)\nx2_bounds = (0, None)\n\n# Case 1: All products are produced in their most profitable quantities\nc = [-360, -240, -450]\nres1 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 2: Product 1 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-30, -240, -450]\nres2 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 3: Product 2 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-360, -120, -450]\nres3 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 4: Product 3 is produced in its second most profitable quantity, others in their most profitable quantities\nc = [-360, -240, -300]\nres4 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Case 5: All products are produced in their second most profitable quantities\nc = [-30, -120, -300]\nres5 = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds])\n\n# Find the maximum profit\nprofits = [-res1.fun, -res2.fun, -res3.fun, -res4.fun, -res5.fun]\nsolution = max(profits)",
    "solution": 22500.0
}