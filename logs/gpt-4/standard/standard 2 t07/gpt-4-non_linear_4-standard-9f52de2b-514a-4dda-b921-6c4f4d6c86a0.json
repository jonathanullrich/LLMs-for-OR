{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The management of the Albert Hanson Company is trying to determine the best product mix for two new products. Because these products would share the same production facilities, the total number of units produced of the two products combined cannot exceed two per hour. Because of uncertainty about how well these products will sell, the profit from producing each product provides decreasing marginal returns as the production rate is increased. In particular, with a production rate of R1 units per hour, it is estimated that Product 1 would provide a profit per hour of $200*R1 - $100*R1^2. If the production rate of product 2 is R2 units per hour, its estimated profit per hour would be $300*R2 - $100*R2^2. Determine the total profit.",
    "output": "The problem is an optimization problem which requires to maximize the sum of profit from Product 1 and Product 2 under the constraint that the total production rate (R1 + R2) should not exceed 2 units per hour. This can be solved by using the method of Lagrange multipliers.\n\nWe can use scipy's optimization function to solve for the production rates that maximize the profit.\n\nHere is the Python code:\n\n```python\nfrom scipy.optimize import minimize\n\n# Objective function\ndef profit_rate(R):\n    R1, R2 = R\n    return -((200 * R1 - 100 * R1 ** 2) + (300 * R2 - 100 * R2 ** 2))\n\n# Constraint\ncons = ({'type': 'eq', 'fun': lambda R:  R[0] + R[1] - 2})\n\n# Initial guess\nR0 = [1, 1]\n\n# Call the optimizer\nres = minimize(profit_rate, R0, constraints=cons)\n\n# production rates that maximize the profit\nR1_opt, R2_opt = res.x\n\n# Calculate the total profit\nsolution = (200 * R1_opt - 100 * R1_opt ** 2) + (300 * R2_opt - 100 * R2_opt ** 2)\n```\n\n'solution' now contains the total profit.",
    "code": "from scipy.optimize import minimize\n\n# Objective function\ndef profit_rate(R):\n    R1, R2 = R\n    return -((200 * R1 - 100 * R1 ** 2) + (300 * R2 - 100 * R2 ** 2))\n\n# Constraint\ncons = ({'type': 'eq', 'fun': lambda R:  R[0] + R[1] - 2})\n\n# Initial guess\nR0 = [1, 1]\n\n# Call the optimizer\nres = minimize(profit_rate, R0, constraints=cons)\n\n# production rates that maximize the profit\nR1_opt, R2_opt = res.x\n\n# Calculate the total profit\nsolution = (200 * R1_opt - 100 * R1_opt ** 2) + (300 * R2_opt - 100 * R2_opt ** 2)",
    "solution": 312.5
}