{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: A young couple, Eve and Steven, want to divide their main household chores (marketing, cooking, dishwashing, and laundering) between them so that each has two tasks but the total time they spend on household duties is kept to a minimum. Their efficiencies on these tasks differ, where the time each would need to perform the task is given by the following. Eve needs 4.5 hours for Marketing, 7.8 hours for Cooking, 3.6 hours for Dishwashing and 2.9 hours for Laundry. Steven needs 4.9 hours for Marketing, 7.2 hours for Cooking, 4.3 hours for Dishwashing and 3.1 hours for Laundry. Calculate the miminum time spend to do the chores.",
    "output": "This problem can be solved with the help of the Hungarian Algorithm, also known as the Kuhn-Munkres Algorithm, for task assignment to minimize cost. Here, the cost is the time required to perform each task. \n\nWe will use the Python library 'Munkres' to implement the Hungarian Algorithm. \n\nHere is the Python code:\n\n```python\nfrom munkres import Munkres\n\n# Define the matrix of time required for each task\nmatrix = [[4.5, 7.8, 3.6, 2.9], [4.9, 7.2, 4.3, 3.1]]\n\n# Initialize Munkres object\nm = Munkres()\n\n# Compute the optimal assignment to minimize time\nindexes = m.compute(matrix)\n\ntotal_time = 0\nfor row, column in indexes:\n    total_time += matrix[row][column]\n\n# Assign the total time to 'solution'\nsolution = total_time\n```\n\nThis code will give the minimum total time required to complete the chores by assigning tasks to each person in the most efficient way.\n\nTo execute the code, the following Python packages need to be installed: munkres.",
    "code": "from munkres import Munkres\n\n# Define the matrix of time required for each task\nmatrix = [[4.5, 7.8, 3.6, 2.9], [4.9, 7.2, 4.3, 3.1]]\n\n# Initialize Munkres object\nm = Munkres()\n\n# Compute the optimal assignment to minimize time\nindexes = m.compute(matrix)\n\ntotal_time = 0\nfor row, column in indexes:\n    total_time += matrix[row][column]\n\n# Assign the total time to 'solution'\nsolution = total_time",
    "solution": 6.7
}