{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The MFG Corporation is planning to produce and market three different products. Let x1, x2, and x3 denote the number of units of the three respective products to be produced. The preliminary estimates of their potential profitability are as follows. For the first 15 units produced of Product 1, the unit profit would be approximately $360. The unit profit would be only $30 for any additional units of Product 1. For the first 20 units produced of Product 2, the unit profit is estimated at $240. The unit profit would be $120 for each of the next 20 units and $90 for any additional units. For the first 20 units of Product 3, the unit profit would be $450. The unit profit would be $300 for each of the next 10 units and $180 for any additional units. Certain limitations on the use of needed resources impose the following constraints on the production of the three products: x1 + x2 + x3 <= 60, 3*x1 + 2*x2 <= 200, x1 + 2*x3 <= 70. Management wants to know what values of x1, x2 and x3 should be chosen to maximize the total profit.",
    "output": "This problem can be solved by using linear programming. Let's use the library named scipy in python to solve this problem.\n\n```python\nfrom scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-360, -30, -240, -120, -90, -450, -300, -180]\n\n# Coefficients of the inequality constraints\nA = [[1, 1, 1, 0, 0, 0, 0, 0],\n     [3, 0, 2, 0, 0, 0, 0, 0],\n     [1, 0, 0, 0, 0, 2, 0, 0],\n     [1, -1, 0, 0, 0, 0, 0, 0],\n     [0, 0, 1, -1, 0, 0, 0, 0],\n     [0, 0, 0, 0, 0, 1, -1, 0]]\n\n# Right-hand side of the inequality constraints\nb = [60, 200, 70, 0, 0, 0]\n\n# Bounds for the variables\nx0_bounds = (0, 15)\nx1_bounds = (0, None)\nx2_bounds = (0, 20)\nx3_bounds = (0, 20)\nx4_bounds = (0, None)\nx5_bounds = (0, 20)\nx6_bounds = (0, 10)\nx7_bounds = (0, None)\n\n# Solve the linear programming problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds, x3_bounds, x4_bounds, x5_bounds, x6_bounds, x7_bounds], method='simplex')\n\nsolution = -res.fun\n```\n\nThe negative sign in `-res.fun` is used because we want to maximize the profit but `linprog` function minimizes the objective function by default.\n\nIn the solution, `x0`, `x1`, `x2`, `x3`, `x4`, `x5`, `x6`, `x7` represent the number of units of product 1, additional units of product 1, units of product 2, additional units of product 2, additional units of product 2, units of product 3, additional units of product 3, additional units of product 3 respectively. \n\nThe variables `x1`, `x4`, `x7` represent additional units of products which are more than the initially defined units. These variables will be used when the production of a product exceeds the initially defined limit.",
    "code": "from scipy.optimize import linprog\n\n# Coefficients of the objective function\nc = [-360, -30, -240, -120, -90, -450, -300, -180]\n\n# Coefficients of the inequality constraints\nA = [[1, 1, 1, 0, 0, 0, 0, 0],\n     [3, 0, 2, 0, 0, 0, 0, 0],\n     [1, 0, 0, 0, 0, 2, 0, 0],\n     [1, -1, 0, 0, 0, 0, 0, 0],\n     [0, 0, 1, -1, 0, 0, 0, 0],\n     [0, 0, 0, 0, 0, 1, -1, 0]]\n\n# Right-hand side of the inequality constraints\nb = [60, 200, 70, 0, 0, 0]\n\n# Bounds for the variables\nx0_bounds = (0, 15)\nx1_bounds = (0, None)\nx2_bounds = (0, 20)\nx3_bounds = (0, 20)\nx4_bounds = (0, None)\nx5_bounds = (0, 20)\nx6_bounds = (0, 10)\nx7_bounds = (0, None)\n\n# Solve the linear programming problem\nres = linprog(c, A_ub=A, b_ub=b, bounds=[x0_bounds, x1_bounds, x2_bounds, x3_bounds, x4_bounds, x5_bounds, x6_bounds, x7_bounds], method='simplex')\n\nsolution = -res.fun",
    "solution": Infinity
}