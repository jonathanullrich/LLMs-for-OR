{
    "system_prompt": "You are an operations research expert. Write python code to solve the given problem. Assign the final output to a variable 'solution'. Only assign one number.",
    "problem_description": "Consider the following problem: The coach of an age group swim team needs to assign swimmers to a 200-yard medley relay team to send to the Junior Olympics. Since most of his best swimmers are very fast in more than one stroke, it is not clear which swimmer should be assigned to each of the four strokes. The five fastest swimmers and the best times (in seconds) they have achieved in each of the strokes (for 50 yards) are for Backstroke: Carl (37.7), Chris (32.9), David (33.8), Tony (37.0), Ken (35.4); for Breaststroke: Carl (43.4), Chris (33.1), David (42.2), Tony (34.7), Ken (41.8); for Butterfly: Carl (33.3), Chris (28.5), David (38.9), Tony (30.4), Ken (33.6); for Freestyle: Carl (29.2), Chris (26.4), David (29.6), Tony (28.5), Ken (31.1). The coach wishes to determine how to assign four swimmers to the four different strokes to minimize the sum of the corresponding best times. Find the minimum time spend.",
    "output": "We can use the Munkres algorithm (also known as the Hungarian algorithm) to solve this problem. The algorithm is a solution for the assignment problem, which consists of finding the maximum matching in a weighted bipartite graph.\n\nHere's the python code using the Python munkres library:\n\n```python\nfrom munkres import Munkres, print_matrix\n\nmatrix = [[37.7, 32.9, 33.8, 37.0, 35.4],  # Backstroke\n          [43.4, 33.1, 42.2, 34.7, 41.8],  # Breaststroke\n          [33.3, 28.5, 38.9, 30.4, 33.6],  # Butterfly\n          [29.2, 26.4, 29.6, 28.5, 31.1]]  # Freestyle\n\nm = Munkres()\nindexes = m.compute(matrix)\n\ntotal = 0\nfor row, column in indexes:\n    value = matrix[row][column]\n    total += value\n\nsolution = total\n```\n\nThe \"solution\" variable will contain the minimum time.",
    "code": "from munkres import Munkres, print_matrix\n\nmatrix = [[37.7, 32.9, 33.8, 37.0, 35.4],  # Backstroke\n          [43.4, 33.1, 42.2, 34.7, 41.8],  # Breaststroke\n          [33.3, 28.5, 38.9, 30.4, 33.6],  # Butterfly\n          [29.2, 26.4, 29.6, 28.5, 31.1]]  # Freestyle\n\nm = Munkres()\nindexes = m.compute(matrix)\n\ntotal = 0\nfor row, column in indexes:\n    value = matrix[row][column]\n    total += value\n\nsolution = total",
    "solution": 126.2
}